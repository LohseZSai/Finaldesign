{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '@/store/auth';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { HomeFilled, Monitor, DataLine, Connection, User, Setting, Search, Plus, ArrowDown } from '@element-plus/icons-vue';\nexport default {\n  name: 'EmployeeManagementPage',\n  components: {\n    HomeFilled,\n    Monitor,\n    DataLine,\n    Connection,\n    User,\n    Setting,\n    Search,\n    Plus,\n    ArrowDown\n  },\n  setup() {\n    const router = useRouter();\n    const authStore = useAuthStore();\n\n    // 侧边栏状态\n    const isCollapse = ref(false);\n\n    // 用户信息\n    const userName = computed(() => authStore.user?.name || '用户');\n    const userAvatar = computed(() => authStore.user?.avatar || '');\n    const userInitials = computed(() => {\n      const name = authStore.user?.name || '';\n      return name.substring(0, 1).toUpperCase();\n    });\n    const isAdmin = computed(() => authStore.isAdmin);\n\n    // 员工列表状态\n    const loading = ref(false);\n    const employees = ref([]);\n    const totalEmployees = ref(0);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n\n    // 搜索和筛选\n    const searchQuery = ref('');\n    const filterRole = ref('');\n    const filterStatus = ref('');\n\n    // 对话框状态\n    const dialogVisible = ref(false);\n    const isEdit = ref(false);\n    const submitting = ref(false);\n    const employeeFormRef = ref(null);\n\n    // 员工表单\n    const employeeForm = reactive({\n      id: '',\n      name: '',\n      email: '',\n      phone: '',\n      department: '',\n      role: '',\n      status: 'active',\n      joinDate: '',\n      password: '',\n      confirmPassword: ''\n    });\n\n    // 表单验证规则\n    const employeeRules = {\n      name: [{\n        required: true,\n        message: '请输入员工姓名',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 20,\n        message: '长度在 2 到 20 个字符',\n        trigger: 'blur'\n      }],\n      email: [{\n        required: true,\n        message: '请输入邮箱地址',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱地址',\n        trigger: 'blur'\n      }],\n      phone: [{\n        required: true,\n        message: '请输入联系电话',\n        trigger: 'blur'\n      }, {\n        pattern: /^1[3-9]\\d{9}$/,\n        message: '请输入正确的手机号码',\n        trigger: 'blur'\n      }],\n      department: [{\n        required: true,\n        message: '请选择部门',\n        trigger: 'change'\n      }],\n      role: [{\n        required: true,\n        message: '请选择角色',\n        trigger: 'change'\n      }],\n      status: [{\n        required: true,\n        message: '请选择状态',\n        trigger: 'change'\n      }],\n      joinDate: [{\n        required: true,\n        message: '请选择入职日期',\n        trigger: 'change'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能小于6位',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请确认密码',\n        trigger: 'blur'\n      }, {\n        validator: (rule, value, callback) => {\n          if (value !== employeeForm.password) {\n            callback(new Error('两次输入密码不一致'));\n          } else {\n            callback();\n          }\n        },\n        trigger: 'blur'\n      }]\n    };\n\n    // 过滤后的员工列表\n    const filteredEmployees = computed(() => {\n      return employees.value;\n    });\n\n    // 方法\n    const toggleSidebar = () => {\n      isCollapse.value = !isCollapse.value;\n    };\n    const handleCommand = command => {\n      if (command === 'logout') {\n        ElMessageBox.confirm('确定要退出登录吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          authStore.logout();\n          router.push('/');\n          ElMessage.success('已成功退出登录');\n        }).catch(() => {});\n      } else if (command === 'profile') {\n        router.push('/admin/profile');\n      } else if (command === 'settings') {\n        router.push('/admin/settings');\n      }\n    };\n    const getInitials = name => {\n      return name ? name.substring(0, 1).toUpperCase() : '';\n    };\n    const getRoleName = role => {\n      const roleMap = {\n        'admin': '管理员',\n        'technician': '技术员',\n        'breeder': '饲养员'\n      };\n      return roleMap[role] || role;\n    };\n    const getRoleTagType = role => {\n      const typeMap = {\n        'admin': 'danger',\n        'technician': 'warning',\n        'breeder': 'success'\n      };\n      return typeMap[role] || '';\n    };\n    const fetchEmployees = async () => {\n      loading.value = true;\n      try {\n        // 这里应该是从API获取数据\n        // 模拟API请求\n        setTimeout(() => {\n          employees.value = [{\n            id: '1001',\n            name: '张三',\n            email: 'zhangsan@example.com',\n            phone: '13800138001',\n            department: 'management',\n            role: 'admin',\n            status: 'active',\n            joinDate: '2022-01-15',\n            avatar: ''\n          }, {\n            id: '1002',\n            name: '李四',\n            email: 'lisi@example.com',\n            phone: '13800138002',\n            department: 'technology',\n            role: 'technician',\n            status: 'active',\n            joinDate: '2022-02-20',\n            avatar: ''\n          }, {\n            id: '1003',\n            name: '王五',\n            email: 'wangwu@example.com',\n            phone: '13800138003',\n            department: 'production',\n            role: 'breeder',\n            status: 'active',\n            joinDate: '2022-03-10',\n            avatar: ''\n          }, {\n            id: '1004',\n            name: '赵六',\n            email: 'zhaoliu@example.com',\n            phone: '13800138004',\n            department: 'logistics',\n            role: 'breeder',\n            status: 'inactive',\n            joinDate: '2022-04-05',\n            avatar: ''\n          }];\n          totalEmployees.value = employees.value.length;\n          loading.value = false;\n        }, 500);\n      } catch (error) {\n        console.error('获取员工列表失败:', error);\n        ElMessage.error('获取员工列表失败');\n        loading.value = false;\n      }\n    };\n    const handleSearch = () => {\n      // 实际应用中应该调用API进行搜索\n      // 这里简单模拟前端过滤\n      fetchEmployees();\n    };\n    const handleSizeChange = size => {\n      pageSize.value = size;\n      fetchEmployees();\n    };\n    const handleCurrentChange = page => {\n      currentPage.value = page;\n      fetchEmployees();\n    };\n    const resetEmployeeForm = () => {\n      employeeForm.id = '';\n      employeeForm.name = '';\n      employeeForm.email = '';\n      employeeForm.phone = '';\n      employeeForm.department = '';\n      employeeForm.role = '';\n      employeeForm.status = 'active';\n      employeeForm.joinDate = '';\n      employeeForm.password = '';\n      employeeForm.confirmPassword = '';\n    };\n    const showAddEmployeeDialog = () => {\n      isEdit.value = false;\n      resetEmployeeForm();\n      dialogVisible.value = true;\n    };\n    const handleEdit = row => {\n      isEdit.value = true;\n      Object.keys(employeeForm).forEach(key => {\n        if (key !== 'password' && key !== 'confirmPassword') {\n          employeeForm[key] = row[key];\n        }\n      });\n      dialogVisible.value = true;\n    };\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除员工 ${row.name} 吗?`, '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 这里应该调用API删除员工\n        ElMessage.success('删除成功');\n        fetchEmployees();\n      }).catch(() => {});\n    };\n    const submitEmployeeForm = () => {\n      employeeFormRef.value.validate(async valid => {\n        if (valid) {\n          submitting.value = true;\n          try {\n            // 这里应该调用API保存员工信息\n            setTimeout(() => {\n              ElMessage.success(isEdit.value ? '员工信息更新成功' : '员工添加成功');\n              dialogVisible.value = false;\n              fetchEmployees();\n              submitting.value = false;\n            }, 500);\n          } catch (error) {\n            console.error('保存员工信息失败:', error);\n            ElMessage.error('保存失败，请重试');\n            submitting.value = false;\n          }\n        } else {\n          return false;\n        }\n      });\n    };\n\n    // 生命周期钩子\n    onMounted(() => {\n      fetchEmployees();\n    });\n    return {\n      isCollapse,\n      userName,\n      userAvatar,\n      userInitials,\n      isAdmin,\n      loading,\n      employees,\n      filteredEmployees,\n      totalEmployees,\n      currentPage,\n      pageSize,\n      searchQuery,\n      filterRole,\n      filterStatus,\n      dialogVisible,\n      isEdit,\n      submitting,\n      employeeForm,\n      employeeRules,\n      employeeFormRef,\n      toggleSidebar,\n      handleCommand,\n      getInitials,\n      getRoleName,\n      getRoleTagType,\n      handleSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      showAddEmployeeDialog,\n      handleEdit,\n      handleDelete,\n      submitEmployeeForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useRouter","useAuthStore","ElMessage","ElMessageBox","HomeFilled","Monitor","DataLine","Connection","User","Setting","Search","Plus","ArrowDown","name","components","setup","router","authStore","isCollapse","userName","user","userAvatar","avatar","userInitials","substring","toUpperCase","isAdmin","loading","employees","totalEmployees","currentPage","pageSize","searchQuery","filterRole","filterStatus","dialogVisible","isEdit","submitting","employeeFormRef","employeeForm","id","email","phone","department","role","status","joinDate","password","confirmPassword","employeeRules","required","message","trigger","min","max","type","pattern","validator","rule","value","callback","Error","filteredEmployees","toggleSidebar","handleCommand","command","confirm","confirmButtonText","cancelButtonText","then","logout","push","success","catch","getInitials","getRoleName","roleMap","getRoleTagType","typeMap","fetchEmployees","setTimeout","length","error","console","handleSearch","handleSizeChange","size","handleCurrentChange","page","resetEmployeeForm","showAddEmployeeDialog","handleEdit","row","Object","keys","forEach","key","handleDelete","submitEmployeeForm","validate","valid"],"sources":["C:\\Users\\Scott\\Downloads\\毕设\\frontend\\src\\views\\admin\\EmployeeManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"employee-management-page\">\r\n    <el-container>\r\n      <!-- 侧边栏 -->\r\n      <el-aside width=\"250px\" class=\"sidebar\">\r\n        <div class=\"logo-container\">\r\n          <img src=\"@/assets/logo.svg\" alt=\"泓泰生物科技\" class=\"logo\" />\r\n          <h2>智能养殖管理系统</h2>\r\n        </div>\r\n        \r\n        <el-menu\r\n          default-active=\"/admin/employees\"\r\n          class=\"sidebar-menu\"\r\n          router\r\n          background-color=\"#001529\"\r\n          text-color=\"#fff\"\r\n          active-text-color=\"#409EFF\"\r\n        >\r\n          <el-menu-item index=\"/admin\">\r\n            <el-icon><HomeFilled /></el-icon>\r\n            <span>控制台</span>\r\n          </el-menu-item>\r\n          \r\n          <el-menu-item index=\"/admin/monitoring\">\r\n            <el-icon><Monitor /></el-icon>\r\n            <span>生产监控</span>\r\n          </el-menu-item>\r\n          \r\n          <el-sub-menu index=\"data\">\r\n            <template #title>\r\n              <el-icon><DataLine /></el-icon>\r\n              <span>数据分析</span>\r\n            </template>\r\n            <el-menu-item index=\"/admin/data/environment\">环境数据</el-menu-item>\r\n            <el-menu-item index=\"/admin/data/production\">生产数据</el-menu-item>\r\n            <el-menu-item index=\"/admin/data/reports\">报表中心</el-menu-item>\r\n          </el-sub-menu>\r\n          \r\n          <el-menu-item index=\"/admin/devices\">\r\n            <el-icon><Connection /></el-icon>\r\n            <span>设备管理</span>\r\n          </el-menu-item>\r\n          \r\n          <el-menu-item index=\"/admin/employees\">\r\n            <el-icon><User /></el-icon>\r\n            <span>员工管理</span>\r\n          </el-menu-item>\r\n          \r\n          <el-menu-item index=\"/admin/settings\">\r\n            <el-icon><Setting /></el-icon>\r\n            <span>系统设置</span>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </el-aside>\r\n      \r\n      <!-- 主内容区 -->\r\n      <el-container>\r\n        <!-- 顶部导航 -->\r\n        <el-header class=\"header\">\r\n          <div class=\"header-left\">\r\n            <el-button\r\n              type=\"text\"\r\n              :icon=\"isCollapse ? 'Expand' : 'Fold'\"\r\n              @click=\"toggleSidebar\"\r\n              class=\"toggle-button\"\r\n            />\r\n            <el-breadcrumb separator=\"/\">\r\n              <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n              <el-breadcrumb-item :to=\"{ path: '/admin' }\">管理控制台</el-breadcrumb-item>\r\n              <el-breadcrumb-item>员工管理</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n          </div>\r\n          \r\n          <div class=\"header-right\">\r\n            <el-dropdown trigger=\"click\" @command=\"handleCommand\">\r\n              <div class=\"user-dropdown\">\r\n                <el-avatar :size=\"32\" :src=\"userAvatar\">{{ userInitials }}</el-avatar>\r\n                <span class=\"username\">{{ userName }}</span>\r\n                <el-icon><ArrowDown /></el-icon>\r\n              </div>\r\n              \r\n              <template #dropdown>\r\n                <el-dropdown-menu>\r\n                  <el-dropdown-item command=\"profile\">个人信息</el-dropdown-item>\r\n                  <el-dropdown-item command=\"settings\">账号设置</el-dropdown-item>\r\n                  <el-dropdown-item divided command=\"logout\">退出登录</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </template>\r\n            </el-dropdown>\r\n          </div>\r\n        </el-header>\r\n        \r\n        <!-- 主内容 -->\r\n        <el-main class=\"main-content\">\r\n          <div class=\"page-header\">\r\n            <h1>员工管理</h1>\r\n            <el-button type=\"primary\" @click=\"showAddEmployeeDialog\">\r\n              <el-icon><Plus /></el-icon> 添加员工\r\n            </el-button>\r\n          </div>\r\n          \r\n          <!-- 搜索和筛选 -->\r\n          <div class=\"filter-container\">\r\n            <el-input\r\n              v-model=\"searchQuery\"\r\n              placeholder=\"搜索员工姓名/工号\"\r\n              class=\"search-input\"\r\n              clearable\r\n              @clear=\"handleSearch\"\r\n              @input=\"handleSearch\"\r\n            >\r\n              <template #prefix>\r\n                <el-icon><Search /></el-icon>\r\n              </template>\r\n            </el-input>\r\n            \r\n            <el-select v-model=\"filterRole\" placeholder=\"角色筛选\" clearable @change=\"handleSearch\">\r\n              <el-option label=\"全部角色\" value=\"\" />\r\n              <el-option label=\"管理员\" value=\"admin\" />\r\n              <el-option label=\"技术员\" value=\"technician\" />\r\n              <el-option label=\"饲养员\" value=\"breeder\" />\r\n            </el-select>\r\n            \r\n            <el-select v-model=\"filterStatus\" placeholder=\"状态筛选\" clearable @change=\"handleSearch\">\r\n              <el-option label=\"全部状态\" value=\"\" />\r\n              <el-option label=\"在职\" value=\"active\" />\r\n              <el-option label=\"离职\" value=\"inactive\" />\r\n            </el-select>\r\n          </div>\r\n          \r\n          <!-- 员工列表 -->\r\n          <el-table\r\n            :data=\"filteredEmployees\"\r\n            style=\"width: 100%\"\r\n            v-loading=\"loading\"\r\n            border\r\n            stripe\r\n          >\r\n            <el-table-column prop=\"id\" label=\"工号\" width=\"80\" />\r\n            <el-table-column label=\"员工信息\" min-width=\"200\">\r\n              <template #default=\"scope\">\r\n                <div class=\"employee-info\">\r\n                  <el-avatar :size=\"40\" :src=\"scope.row.avatar\">\r\n                    {{ getInitials(scope.row.name) }}\r\n                  </el-avatar>\r\n                  <div class=\"employee-details\">\r\n                    <div class=\"employee-name\">{{ scope.row.name }}</div>\r\n                    <div class=\"employee-email\">{{ scope.row.email }}</div>\r\n                  </div>\r\n                </div>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"联系电话\" width=\"130\" />\r\n            <el-table-column prop=\"department\" label=\"部门\" width=\"120\" />\r\n            <el-table-column prop=\"role\" label=\"角色\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"getRoleTagType(scope.row.role)\">\r\n                  {{ getRoleName(scope.row.role) }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"scope.row.status === 'active' ? 'success' : 'info'\">\r\n                  {{ scope.row.status === 'active' ? '在职' : '离职' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"joinDate\" label=\"入职日期\" width=\"120\" />\r\n            <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n              <template #default=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  @click=\"handleEdit(scope.row)\"\r\n                  :disabled=\"!isAdmin\"\r\n                >\r\n                  编辑\r\n                </el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  size=\"small\"\r\n                  @click=\"handleDelete(scope.row)\"\r\n                  :disabled=\"!isAdmin\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <!-- 分页 -->\r\n          <div class=\"pagination-container\">\r\n            <el-pagination\r\n              v-model:current-page=\"currentPage\"\r\n              v-model:page-size=\"pageSize\"\r\n              :page-sizes=\"[10, 20, 50, 100]\"\r\n              layout=\"total, sizes, prev, pager, next, jumper\"\r\n              :total=\"totalEmployees\"\r\n              @size-change=\"handleSizeChange\"\r\n              @current-change=\"handleCurrentChange\"\r\n            />\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n    </el-container>\r\n    \r\n    <!-- 添加/编辑员工对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"isEdit ? '编辑员工' : '添加员工'\"\r\n      width=\"600px\"\r\n      destroy-on-close\r\n    >\r\n      <el-form\r\n        :model=\"employeeForm\"\r\n        :rules=\"employeeRules\"\r\n        ref=\"employeeFormRef\"\r\n        label-width=\"100px\"\r\n        label-position=\"right\"\r\n      >\r\n        <el-form-item label=\"姓名\" prop=\"name\">\r\n          <el-input v-model=\"employeeForm.name\" placeholder=\"请输入员工姓名\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"employeeForm.email\" placeholder=\"请输入员工邮箱\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"联系电话\" prop=\"phone\">\r\n          <el-input v-model=\"employeeForm.phone\" placeholder=\"请输入联系电话\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"部门\" prop=\"department\">\r\n          <el-select v-model=\"employeeForm.department\" placeholder=\"请选择部门\">\r\n            <el-option label=\"生产部\" value=\"production\" />\r\n            <el-option label=\"技术部\" value=\"technology\" />\r\n            <el-option label=\"管理部\" value=\"management\" />\r\n            <el-option label=\"后勤部\" value=\"logistics\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"角色\" prop=\"role\">\r\n          <el-select v-model=\"employeeForm.role\" placeholder=\"请选择角色\">\r\n            <el-option label=\"管理员\" value=\"admin\" />\r\n            <el-option label=\"技术员\" value=\"technician\" />\r\n            <el-option label=\"饲养员\" value=\"breeder\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"employeeForm.status\">\r\n            <el-radio label=\"active\">在职</el-radio>\r\n            <el-radio label=\"inactive\">离职</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"入职日期\" prop=\"joinDate\">\r\n          <el-date-picker\r\n            v-model=\"employeeForm.joinDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择入职日期\"\r\n            format=\"YYYY-MM-DD\"\r\n            value-format=\"YYYY-MM-DD\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"密码\" prop=\"password\" v-if=\"!isEdit\">\r\n          <el-input\r\n            v-model=\"employeeForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\" v-if=\"!isEdit\">\r\n          <el-input\r\n            v-model=\"employeeForm.confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"请确认密码\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"submitEmployeeForm\" :loading=\"submitting\">\r\n            {{ isEdit ? '保存修改' : '添加员工' }}\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '@/store/auth'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport {\r\n  HomeFilled,\r\n  Monitor,\r\n  DataLine,\r\n  Connection,\r\n  User,\r\n  Setting,\r\n  Search,\r\n  Plus,\r\n  ArrowDown\r\n} from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'EmployeeManagementPage',\r\n  components: {\r\n    HomeFilled,\r\n    Monitor,\r\n    DataLine,\r\n    Connection,\r\n    User,\r\n    Setting,\r\n    Search,\r\n    Plus,\r\n    ArrowDown\r\n  },\r\n  setup() {\r\n    const router = useRouter()\r\n    const authStore = useAuthStore()\r\n    \r\n    // 侧边栏状态\r\n    const isCollapse = ref(false)\r\n    \r\n    // 用户信息\r\n    const userName = computed(() => authStore.user?.name || '用户')\r\n    const userAvatar = computed(() => authStore.user?.avatar || '')\r\n    const userInitials = computed(() => {\r\n      const name = authStore.user?.name || ''\r\n      return name.substring(0, 1).toUpperCase()\r\n    })\r\n    const isAdmin = computed(() => authStore.isAdmin)\r\n    \r\n    // 员工列表状态\r\n    const loading = ref(false)\r\n    const employees = ref([])\r\n    const totalEmployees = ref(0)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(10)\r\n    \r\n    // 搜索和筛选\r\n    const searchQuery = ref('')\r\n    const filterRole = ref('')\r\n    const filterStatus = ref('')\r\n    \r\n    // 对话框状态\r\n    const dialogVisible = ref(false)\r\n    const isEdit = ref(false)\r\n    const submitting = ref(false)\r\n    const employeeFormRef = ref(null)\r\n    \r\n    // 员工表单\r\n    const employeeForm = reactive({\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      department: '',\r\n      role: '',\r\n      status: 'active',\r\n      joinDate: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    })\r\n    \r\n    // 表单验证规则\r\n    const employeeRules = {\r\n      name: [\r\n        { required: true, message: '请输入员工姓名', trigger: 'blur' },\r\n        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n      ],\r\n      email: [\r\n        { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n        { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n      ],\r\n      phone: [\r\n        { required: true, message: '请输入联系电话', trigger: 'blur' },\r\n        { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n      ],\r\n      department: [\r\n        { required: true, message: '请选择部门', trigger: 'change' }\r\n      ],\r\n      role: [\r\n        { required: true, message: '请选择角色', trigger: 'change' }\r\n      ],\r\n      status: [\r\n        { required: true, message: '请选择状态', trigger: 'change' }\r\n      ],\r\n      joinDate: [\r\n        { required: true, message: '请选择入职日期', trigger: 'change' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: '请确认密码', trigger: 'blur' },\r\n        {\r\n          validator: (rule, value, callback) => {\r\n            if (value !== employeeForm.password) {\r\n              callback(new Error('两次输入密码不一致'))\r\n            } else {\r\n              callback()\r\n            }\r\n          },\r\n          trigger: 'blur'\r\n        }\r\n      ]\r\n    }\r\n    \r\n    // 过滤后的员工列表\r\n    const filteredEmployees = computed(() => {\r\n      return employees.value\r\n    })\r\n    \r\n    // 方法\r\n    const toggleSidebar = () => {\r\n      isCollapse.value = !isCollapse.value\r\n    }\r\n    \r\n    const handleCommand = (command) => {\r\n      if (command === 'logout') {\r\n        ElMessageBox.confirm('确定要退出登录吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          authStore.logout()\r\n          router.push('/')\r\n          ElMessage.success('已成功退出登录')\r\n        }).catch(() => {})\r\n      } else if (command === 'profile') {\r\n        router.push('/admin/profile')\r\n      } else if (command === 'settings') {\r\n        router.push('/admin/settings')\r\n      }\r\n    }\r\n    \r\n    const getInitials = (name) => {\r\n      return name ? name.substring(0, 1).toUpperCase() : ''\r\n    }\r\n    \r\n    const getRoleName = (role) => {\r\n      const roleMap = {\r\n        'admin': '管理员',\r\n        'technician': '技术员',\r\n        'breeder': '饲养员'\r\n      }\r\n      return roleMap[role] || role\r\n    }\r\n    \r\n    const getRoleTagType = (role) => {\r\n      const typeMap = {\r\n        'admin': 'danger',\r\n        'technician': 'warning',\r\n        'breeder': 'success'\r\n      }\r\n      return typeMap[role] || ''\r\n    }\r\n    \r\n    const fetchEmployees = async () => {\r\n      loading.value = true\r\n      try {\r\n        // 这里应该是从API获取数据\r\n        // 模拟API请求\r\n        setTimeout(() => {\r\n          employees.value = [\r\n            {\r\n              id: '1001',\r\n              name: '张三',\r\n              email: 'zhangsan@example.com',\r\n              phone: '13800138001',\r\n              department: 'management',\r\n              role: 'admin',\r\n              status: 'active',\r\n              joinDate: '2022-01-15',\r\n              avatar: ''\r\n            },\r\n            {\r\n              id: '1002',\r\n              name: '李四',\r\n              email: 'lisi@example.com',\r\n              phone: '13800138002',\r\n              department: 'technology',\r\n              role: 'technician',\r\n              status: 'active',\r\n              joinDate: '2022-02-20',\r\n              avatar: ''\r\n            },\r\n            {\r\n              id: '1003',\r\n              name: '王五',\r\n              email: 'wangwu@example.com',\r\n              phone: '13800138003',\r\n              department: 'production',\r\n              role: 'breeder',\r\n              status: 'active',\r\n              joinDate: '2022-03-10',\r\n              avatar: ''\r\n            },\r\n            {\r\n              id: '1004',\r\n              name: '赵六',\r\n              email: 'zhaoliu@example.com',\r\n              phone: '13800138004',\r\n              department: 'logistics',\r\n              role: 'breeder',\r\n              status: 'inactive',\r\n              joinDate: '2022-04-05',\r\n              avatar: ''\r\n            }\r\n          ]\r\n          totalEmployees.value = employees.value.length\r\n          loading.value = false\r\n        }, 500)\r\n      } catch (error) {\r\n        console.error('获取员工列表失败:', error)\r\n        ElMessage.error('获取员工列表失败')\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const handleSearch = () => {\r\n      // 实际应用中应该调用API进行搜索\r\n      // 这里简单模拟前端过滤\r\n      fetchEmployees()\r\n    }\r\n    \r\n    const handleSizeChange = (size) => {\r\n      pageSize.value = size\r\n      fetchEmployees()\r\n    }\r\n    \r\n    const handleCurrentChange = (page) => {\r\n      currentPage.value = page\r\n      fetchEmployees()\r\n    }\r\n    \r\n    const resetEmployeeForm = () => {\r\n      employeeForm.id = ''\r\n      employeeForm.name = ''\r\n      employeeForm.email = ''\r\n      employeeForm.phone = ''\r\n      employeeForm.department = ''\r\n      employeeForm.role = ''\r\n      employeeForm.status = 'active'\r\n      employeeForm.joinDate = ''\r\n      employeeForm.password = ''\r\n      employeeForm.confirmPassword = ''\r\n    }\r\n    \r\n    const showAddEmployeeDialog = () => {\r\n      isEdit.value = false\r\n      resetEmployeeForm()\r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    const handleEdit = (row) => {\r\n      isEdit.value = true\r\n      Object.keys(employeeForm).forEach(key => {\r\n        if (key !== 'password' && key !== 'confirmPassword') {\r\n          employeeForm[key] = row[key]\r\n        }\r\n      })\r\n      dialogVisible.value = true\r\n    }\r\n    \r\n    const handleDelete = (row) => {\r\n      ElMessageBox.confirm(`确定要删除员工 ${row.name} 吗?`, '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 这里应该调用API删除员工\r\n        ElMessage.success('删除成功')\r\n        fetchEmployees()\r\n      }).catch(() => {})\r\n    }\r\n    \r\n    const submitEmployeeForm = () => {\r\n      employeeFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          submitting.value = true\r\n          try {\r\n            // 这里应该调用API保存员工信息\r\n            setTimeout(() => {\r\n              ElMessage.success(isEdit.value ? '员工信息更新成功' : '员工添加成功')\r\n              dialogVisible.value = false\r\n              fetchEmployees()\r\n              submitting.value = false\r\n            }, 500)\r\n          } catch (error) {\r\n            console.error('保存员工信息失败:', error)\r\n            ElMessage.error('保存失败，请重试')\r\n            submitting.value = false\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    }\r\n    \r\n    // 生命周期钩子\r\n    onMounted(() => {\r\n      fetchEmployees()\r\n    })\r\n    \r\n    return {\r\n      isCollapse,\r\n      userName,\r\n      userAvatar,\r\n      userInitials,\r\n      isAdmin,\r\n      loading,\r\n      employees,\r\n      filteredEmployees,\r\n      totalEmployees,\r\n      currentPage,\r\n      pageSize,\r\n      searchQuery,\r\n      filterRole,\r\n      filterStatus,\r\n      dialogVisible,\r\n      isEdit,\r\n      submitting,\r\n      employeeForm,\r\n      employeeRules,\r\n      employeeFormRef,\r\n      toggleSidebar,\r\n      handleCommand,\r\n      getInitials,\r\n      getRoleName,\r\n      getRoleTagType,\r\n      handleSearch,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      showAddEmployeeDialog,\r\n      handleEdit,\r\n      handleDelete,\r\n      submitEmployeeForm\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.employee-management-page {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 侧边栏样式 */\r\n.sidebar {\r\n  background-color: #001529;\r\n  color: white;\r\n  height: 100vh;\r\n  overflow-y: auto;\r\n  transition: width 0.3s;\r\n}\r\n\r\n.logo-container {\r\n  padding: 20px;\r\n  text-align: center;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.logo {\r\n  height: 40px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logo-container h2 {\r\n  font-size: 1.2rem;\r\n  margin: 0;\r\n  color: white;\r\n}\r\n\r\n.sidebar-menu {\r\n  border-right: none;\r\n}\r\n\r\n/* 头部样式 */\r\n.header {\r\n  background-color: white;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 20px;\r\n}\r\n\r\n.header-left {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.toggle-button {\r\n  margin-right: 15px;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.user-dropdown {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n\r\n.username {\r\n  margin: 0 10px;\r\n}\r\n\r\n/* 主内容区样式 */\r\n.main-content {\r\n  padding: 20px;\r\n  height: calc(100vh - 60px);\r\n  overflow-y: auto;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0;\r\n  font-size: 1.8rem;\r\n  color: #333;\r\n}\r\n\r\n/* 筛选区域样式 */\r\n.filter-container {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.search-input {\r\n  width: 300px;\r\n}\r\n\r\n/* 员工信息样式 */\r\n.employee-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.employee-details {\r\n  margin-left: 10px;\r\n}\r\n\r\n.employee-name {\r\n  font-weight: bold;\r\n}\r\n\r\n.employee-email {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n/* 分页样式 */\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n/* 响应式调整 */\r\n@media (max-width: 768px) {\r\n  .sidebar {\r\n    position: fixed;\r\n    z-index: 1000;\r\n  }\r\n  \r\n  .filter-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .search-input {\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}