{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useAuthStore } from '@/store/auth';\nimport { useAuth0 } from '@auth0/auth0-vue';\nimport Navbar from '@/components/layout/Navbar.vue';\nexport default {\n  name: 'LoginPage',\n  components: {\n    Navbar\n  },\n  setup() {\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const auth0 = useAuth0();\n    const loginForm = ref(null);\n    const formData = reactive({\n      username: '',\n      password: '',\n      remember: false\n    });\n    const loading = ref(false);\n    const githubLoading = ref(false);\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '用户名长度应为3-20个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度至少为6个字符',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      if (!loginForm.value) return;\n      await loginForm.value.validate(async valid => {\n        if (valid) {\n          try {\n            loading.value = true;\n            const result = await authStore.login({\n              username: formData.username,\n              password: formData.password,\n              remember: formData.remember\n            });\n            if (result.success) {\n              ElMessage.success('登录成功');\n              router.push('/admin');\n            } else {\n              ElMessage.error(result.message);\n            }\n          } catch (error) {\n            console.error('登录错误:', error);\n            ElMessage.error('登录失败，请稍后再试');\n          } finally {\n            loading.value = false;\n          }\n        }\n      });\n    };\n    const handleGithubLogin = async () => {\n      try {\n        githubLoading.value = true;\n        await auth0.loginWithRedirect({\n          authorizationParams: {\n            connection: 'github'\n          }\n        });\n      } catch (error) {\n        console.error('GitHub登录错误:', error);\n        ElMessage.error('GitHub登录失败，请稍后再试');\n        githubLoading.value = false;\n      }\n    };\n    const forgotPassword = () => {\n      ElMessage.info('请联系系统管理员重置密码');\n    };\n    return {\n      loginForm,\n      loginForm: formData,\n      loginRules,\n      loading,\n      githubLoading,\n      handleLogin,\n      handleGithubLogin,\n      forgotPassword\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","useAuthStore","useAuth0","Navbar","name","components","setup","router","authStore","auth0","loginForm","formData","username","password","remember","loading","githubLoading","loginRules","required","message","trigger","min","max","handleLogin","value","validate","valid","result","login","success","push","error","console","handleGithubLogin","loginWithRedirect","authorizationParams","connection","forgotPassword","info"],"sources":["C:\\Users\\Scott\\Downloads\\毕设\\frontend\\src\\views\\public\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <Navbar />\r\n    \r\n    <div class=\"login-container\">\r\n      <div class=\"login-card\">\r\n        <div class=\"login-header\">\r\n          <h2>员工登录</h2>\r\n          <p>欢迎使用泓泰生物科技智能养殖管理系统</p>\r\n        </div>\r\n        \r\n        <el-form\r\n          ref=\"loginForm\"\r\n          :model=\"loginForm\"\r\n          :rules=\"loginRules\"\r\n          label-position=\"top\"\r\n          @submit.prevent=\"handleLogin\"\r\n        >\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input\r\n              v-model=\"loginForm.username\"\r\n              placeholder=\"请输入用户名\"\r\n              prefix-icon=\"User\"\r\n            />\r\n          </el-form-item>\r\n          \r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input\r\n              v-model=\"loginForm.password\"\r\n              type=\"password\"\r\n              placeholder=\"请输入密码\"\r\n              prefix-icon=\"Lock\"\r\n              show-password\r\n            />\r\n          </el-form-item>\r\n          \r\n          <div class=\"remember-forgot\">\r\n            <el-checkbox v-model=\"loginForm.remember\">记住我</el-checkbox>\r\n            <el-button type=\"text\" @click=\"forgotPassword\">忘记密码?</el-button>\r\n          </div>\r\n          \r\n          <el-form-item>\r\n            <el-button\r\n              type=\"primary\"\r\n              native-type=\"submit\"\r\n              :loading=\"loading\"\r\n              class=\"login-button\"\r\n            >\r\n              登录\r\n            </el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n        \r\n        <div class=\"divider\">\r\n          <span>或</span>\r\n        </div>\r\n        \r\n        <div class=\"oauth-login\">\r\n          <el-button\r\n            type=\"default\"\r\n            class=\"github-button\"\r\n            @click=\"handleGithubLogin\"\r\n            :loading=\"githubLoading\"\r\n          >\r\n            <i class=\"el-icon-platform-eleme\"></i>\r\n            使用GitHub账号登录\r\n          </el-button>\r\n        </div>\r\n        \r\n        <div class=\"login-footer\">\r\n          <p>遇到问题? 请联系 <a href=\"mailto:support@hongtai-bio.com\">技术支持</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useAuthStore } from '@/store/auth'\r\nimport { useAuth0 } from '@auth0/auth0-vue'\r\nimport Navbar from '@/components/layout/Navbar.vue'\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  components: {\r\n    Navbar\r\n  },\r\n  \r\n  setup() {\r\n    const router = useRouter()\r\n    const authStore = useAuthStore()\r\n    const auth0 = useAuth0()\r\n    const loginForm = ref(null)\r\n    \r\n    const formData = reactive({\r\n      username: '',\r\n      password: '',\r\n      remember: false\r\n    })\r\n    \r\n    const loading = ref(false)\r\n    const githubLoading = ref(false)\r\n    \r\n    const loginRules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n        { min: 3, max: 20, message: '用户名长度应为3-20个字符', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' },\r\n        { min: 6, message: '密码长度至少为6个字符', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    const handleLogin = async () => {\r\n      if (!loginForm.value) return\r\n      \r\n      await loginForm.value.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            loading.value = true\r\n            \r\n            const result = await authStore.login({\r\n              username: formData.username,\r\n              password: formData.password,\r\n              remember: formData.remember\r\n            })\r\n            \r\n            if (result.success) {\r\n              ElMessage.success('登录成功')\r\n              router.push('/admin')\r\n            } else {\r\n              ElMessage.error(result.message)\r\n            }\r\n          } catch (error) {\r\n            console.error('登录错误:', error)\r\n            ElMessage.error('登录失败，请稍后再试')\r\n          } finally {\r\n            loading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleGithubLogin = async () => {\r\n      try {\r\n        githubLoading.value = true\r\n        await auth0.loginWithRedirect({\r\n          authorizationParams: {\r\n            connection: 'github'\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('GitHub登录错误:', error)\r\n        ElMessage.error('GitHub登录失败，请稍后再试')\r\n        githubLoading.value = false\r\n      }\r\n    }\r\n    \r\n    const forgotPassword = () => {\r\n      ElMessage.info('请联系系统管理员重置密码')\r\n    }\r\n    \r\n    return {\r\n      loginForm,\r\n      loginForm: formData,\r\n      loginRules,\r\n      loading,\r\n      githubLoading,\r\n      handleLogin,\r\n      handleGithubLogin,\r\n      forgotPassword\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  min-height: 100vh;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 60px 20px;\r\n}\r\n\r\n.login-card {\r\n  width: 100%;\r\n  max-width: 450px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\r\n  padding: 40px;\r\n}\r\n\r\n.login-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.login-header h2 {\r\n  font-size: 1.8rem;\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.login-header p {\r\n  color: #666;\r\n  font-size: 1rem;\r\n}\r\n\r\n.remember-forgot {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.divider {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n}\r\n\r\n.divider::before,\r\n.divider::after {\r\n  content: '';\r\n  flex: 1;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.divider span {\r\n  padding: 0 10px;\r\n  color: #999;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.oauth-login {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.github-button {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.login-footer {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #999;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.login-footer a {\r\n  color: #409EFF;\r\n  text-decoration: none;\r\n}\r\n</style> "],"mappings":"AA8EA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,YAAW,QAAS,cAAa;AAC1C,SAASC,QAAO,QAAS,kBAAiB;AAC1C,OAAOC,MAAK,MAAO,gCAA+B;AAElD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EAEDG,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIR,SAAS,CAAC;IACzB,MAAMS,SAAQ,GAAIP,YAAY,CAAC;IAC/B,MAAMQ,KAAI,GAAIP,QAAQ,CAAC;IACvB,MAAMQ,SAAQ,GAAIb,GAAG,CAAC,IAAI;IAE1B,MAAMc,QAAO,GAAIb,QAAQ,CAAC;MACxBc,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,OAAM,GAAIlB,GAAG,CAAC,KAAK;IACzB,MAAMmB,aAAY,GAAInB,GAAG,CAAC,KAAK;IAE/B,MAAMoB,UAAS,GAAI;MACjBL,QAAQ,EAAE,CACR;QAAEM,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,EAC/D;MACDP,QAAQ,EAAE,CACR;QAAEK,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAO;IAEtD;IAEA,MAAMG,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACb,SAAS,CAACc,KAAK,EAAE;MAEtB,MAAMd,SAAS,CAACc,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC9C,IAAIA,KAAK,EAAE;UACT,IAAI;YACFX,OAAO,CAACS,KAAI,GAAI,IAAG;YAEnB,MAAMG,MAAK,GAAI,MAAMnB,SAAS,CAACoB,KAAK,CAAC;cACnChB,QAAQ,EAAED,QAAQ,CAACC,QAAQ;cAC3BC,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;cAC3BC,QAAQ,EAAEH,QAAQ,CAACG;YACrB,CAAC;YAED,IAAIa,MAAM,CAACE,OAAO,EAAE;cAClB7B,SAAS,CAAC6B,OAAO,CAAC,MAAM;cACxBtB,MAAM,CAACuB,IAAI,CAAC,QAAQ;YACtB,OAAO;cACL9B,SAAS,CAAC+B,KAAK,CAACJ,MAAM,CAACR,OAAO;YAChC;UACF,EAAE,OAAOY,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK;YAC5B/B,SAAS,CAAC+B,KAAK,CAAC,YAAY;UAC9B,UAAU;YACRhB,OAAO,CAACS,KAAI,GAAI,KAAI;UACtB;QACF;MACF,CAAC;IACH;IAEA,MAAMS,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACFjB,aAAa,CAACQ,KAAI,GAAI,IAAG;QACzB,MAAMf,KAAK,CAACyB,iBAAiB,CAAC;UAC5BC,mBAAmB,EAAE;YACnBC,UAAU,EAAE;UACd;QACF,CAAC;MACH,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK;QAClC/B,SAAS,CAAC+B,KAAK,CAAC,kBAAkB;QAClCf,aAAa,CAACQ,KAAI,GAAI,KAAI;MAC5B;IACF;IAEA,MAAMa,cAAa,GAAIA,CAAA,KAAM;MAC3BrC,SAAS,CAACsC,IAAI,CAAC,cAAc;IAC/B;IAEA,OAAO;MACL5B,SAAS;MACTA,SAAS,EAAEC,QAAQ;MACnBM,UAAU;MACVF,OAAO;MACPC,aAAa;MACbO,WAAW;MACXU,iBAAiB;MACjBI;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}