{"ast":null,"code":"import { defineStore } from 'pinia';\nimport axios from 'axios';\nexport const useMonitoringStore = defineStore('monitoring', {\n  state: () => ({\n    environmentData: {\n      temperature: [],\n      humidity: [],\n      ammonia: []\n    },\n    pigData: {\n      totalCount: 0,\n      weightDistribution: [],\n      healthStatus: {\n        healthy: 0,\n        attention: 0,\n        sick: 0\n      }\n    },\n    feedingData: {\n      dailyConsumption: [],\n      feedStock: 0\n    },\n    alertsData: {\n      active: [],\n      history: []\n    },\n    cameraStreams: [],\n    isLoading: false,\n    error: null,\n    lastUpdated: null\n  }),\n  getters: {\n    currentTemperature: state => {\n      const temps = state.environmentData.temperature;\n      return temps.length ? temps[temps.length - 1].value : null;\n    },\n    currentHumidity: state => {\n      const humidity = state.environmentData.humidity;\n      return humidity.length ? humidity[humidity.length - 1].value : null;\n    },\n    currentAmmonia: state => {\n      const ammonia = state.environmentData.ammonia;\n      return ammonia.length ? ammonia[ammonia.length - 1].value : null;\n    },\n    activeAlertsCount: state => state.alertsData.active.length,\n    pigHealthPercentage: state => {\n      const total = state.pigData.totalCount;\n      if (!total) return {\n        healthy: 0,\n        attention: 0,\n        sick: 0\n      };\n      return {\n        healthy: state.pigData.healthStatus.healthy / total * 100,\n        attention: state.pigData.healthStatus.attention / total * 100,\n        sick: state.pigData.healthStatus.sick / total * 100\n      };\n    }\n  },\n  actions: {\n    async fetchEnvironmentData(timeRange = '24h') {\n      try {\n        this.isLoading = true;\n        const response = await axios.get(`/api/monitoring/environment?timeRange=${timeRange}`);\n        this.environmentData = response.data;\n        this.lastUpdated = new Date();\n        this.error = null;\n      } catch (error) {\n        console.error('获取环境数据错误:', error);\n        this.error = '获取环境数据失败，请稍后再试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchPigData() {\n      try {\n        this.isLoading = true;\n        const response = await axios.get('/api/monitoring/pigs');\n        this.pigData = response.data;\n        this.error = null;\n      } catch (error) {\n        console.error('获取猪群数据错误:', error);\n        this.error = '获取猪群数据失败，请稍后再试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchFeedingData(timeRange = '7d') {\n      try {\n        this.isLoading = true;\n        const response = await axios.get(`/api/monitoring/feeding?timeRange=${timeRange}`);\n        this.feedingData = response.data;\n        this.error = null;\n      } catch (error) {\n        console.error('获取饲喂数据错误:', error);\n        this.error = '获取饲喂数据失败，请稍后再试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchAlertsData() {\n      try {\n        this.isLoading = true;\n        const response = await axios.get('/api/monitoring/alerts');\n        this.alertsData = response.data;\n        this.error = null;\n      } catch (error) {\n        console.error('获取告警数据错误:', error);\n        this.error = '获取告警数据失败，请稍后再试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchCameraStreams() {\n      try {\n        this.isLoading = true;\n        const response = await axios.get('/api/monitoring/cameras');\n        this.cameraStreams = response.data;\n        this.error = null;\n      } catch (error) {\n        console.error('获取摄像头流错误:', error);\n        this.error = '获取摄像头流失败，请稍后再试';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchAllMonitoringData() {\n      await Promise.all([this.fetchEnvironmentData(), this.fetchPigData(), this.fetchFeedingData(), this.fetchAlertsData(), this.fetchCameraStreams()]);\n    },\n    async acknowledgeAlert(alertId) {\n      try {\n        await axios.post(`/api/monitoring/alerts/${alertId}/acknowledge`);\n        // 更新告警列表\n        await this.fetchAlertsData();\n        return {\n          success: true\n        };\n      } catch (error) {\n        console.error('确认告警错误:', error);\n        return {\n          success: false,\n          message: error.response?.data?.message || '确认告警失败，请稍后再试'\n        };\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useMonitoringStore","state","environmentData","temperature","humidity","ammonia","pigData","totalCount","weightDistribution","healthStatus","healthy","attention","sick","feedingData","dailyConsumption","feedStock","alertsData","active","history","cameraStreams","isLoading","error","lastUpdated","getters","currentTemperature","temps","length","value","currentHumidity","currentAmmonia","activeAlertsCount","pigHealthPercentage","total","actions","fetchEnvironmentData","timeRange","response","get","data","Date","console","fetchPigData","fetchFeedingData","fetchAlertsData","fetchCameraStreams","fetchAllMonitoringData","Promise","all","acknowledgeAlert","alertId","post","success","message"],"sources":["C:/Users/Scott/Downloads/毕设/frontend/src/store/monitoring.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport axios from 'axios'\r\n\r\nexport const useMonitoringStore = defineStore('monitoring', {\r\n  state: () => ({\r\n    environmentData: {\r\n      temperature: [],\r\n      humidity: [],\r\n      ammonia: []\r\n    },\r\n    pigData: {\r\n      totalCount: 0,\r\n      weightDistribution: [],\r\n      healthStatus: {\r\n        healthy: 0,\r\n        attention: 0,\r\n        sick: 0\r\n      }\r\n    },\r\n    feedingData: {\r\n      dailyConsumption: [],\r\n      feedStock: 0\r\n    },\r\n    alertsData: {\r\n      active: [],\r\n      history: []\r\n    },\r\n    cameraStreams: [],\r\n    isLoading: false,\r\n    error: null,\r\n    lastUpdated: null\r\n  }),\r\n  \r\n  getters: {\r\n    currentTemperature: (state) => {\r\n      const temps = state.environmentData.temperature\r\n      return temps.length ? temps[temps.length - 1].value : null\r\n    },\r\n    \r\n    currentHumidity: (state) => {\r\n      const humidity = state.environmentData.humidity\r\n      return humidity.length ? humidity[humidity.length - 1].value : null\r\n    },\r\n    \r\n    currentAmmonia: (state) => {\r\n      const ammonia = state.environmentData.ammonia\r\n      return ammonia.length ? ammonia[ammonia.length - 1].value : null\r\n    },\r\n    \r\n    activeAlertsCount: (state) => state.alertsData.active.length,\r\n    \r\n    pigHealthPercentage: (state) => {\r\n      const total = state.pigData.totalCount\r\n      if (!total) return { healthy: 0, attention: 0, sick: 0 }\r\n      \r\n      return {\r\n        healthy: (state.pigData.healthStatus.healthy / total) * 100,\r\n        attention: (state.pigData.healthStatus.attention / total) * 100,\r\n        sick: (state.pigData.healthStatus.sick / total) * 100\r\n      }\r\n    }\r\n  },\r\n  \r\n  actions: {\r\n    async fetchEnvironmentData(timeRange = '24h') {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get(`/api/monitoring/environment?timeRange=${timeRange}`)\r\n        this.environmentData = response.data\r\n        this.lastUpdated = new Date()\r\n        this.error = null\r\n      } catch (error) {\r\n        console.error('获取环境数据错误:', error)\r\n        this.error = '获取环境数据失败，请稍后再试'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n    \r\n    async fetchPigData() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get('/api/monitoring/pigs')\r\n        this.pigData = response.data\r\n        this.error = null\r\n      } catch (error) {\r\n        console.error('获取猪群数据错误:', error)\r\n        this.error = '获取猪群数据失败，请稍后再试'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n    \r\n    async fetchFeedingData(timeRange = '7d') {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get(`/api/monitoring/feeding?timeRange=${timeRange}`)\r\n        this.feedingData = response.data\r\n        this.error = null\r\n      } catch (error) {\r\n        console.error('获取饲喂数据错误:', error)\r\n        this.error = '获取饲喂数据失败，请稍后再试'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n    \r\n    async fetchAlertsData() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get('/api/monitoring/alerts')\r\n        this.alertsData = response.data\r\n        this.error = null\r\n      } catch (error) {\r\n        console.error('获取告警数据错误:', error)\r\n        this.error = '获取告警数据失败，请稍后再试'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n    \r\n    async fetchCameraStreams() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await axios.get('/api/monitoring/cameras')\r\n        this.cameraStreams = response.data\r\n        this.error = null\r\n      } catch (error) {\r\n        console.error('获取摄像头流错误:', error)\r\n        this.error = '获取摄像头流失败，请稍后再试'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n    \r\n    async fetchAllMonitoringData() {\r\n      await Promise.all([\r\n        this.fetchEnvironmentData(),\r\n        this.fetchPigData(),\r\n        this.fetchFeedingData(),\r\n        this.fetchAlertsData(),\r\n        this.fetchCameraStreams()\r\n      ])\r\n    },\r\n    \r\n    async acknowledgeAlert(alertId) {\r\n      try {\r\n        await axios.post(`/api/monitoring/alerts/${alertId}/acknowledge`)\r\n        // 更新告警列表\r\n        await this.fetchAlertsData()\r\n        return { success: true }\r\n      } catch (error) {\r\n        console.error('确认告警错误:', error)\r\n        return { \r\n          success: false, \r\n          message: error.response?.data?.message || '确认告警失败，请稍后再试' \r\n        }\r\n      }\r\n    }\r\n  }\r\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}