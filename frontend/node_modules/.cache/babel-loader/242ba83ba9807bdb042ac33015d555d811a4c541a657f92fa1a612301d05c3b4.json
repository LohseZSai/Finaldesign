{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { useAuth0 } from '@auth0/auth0-vue';\n\n// 公共页面\nconst Home = () => import('../views/public/Home.vue');\nconst About = () => import('../views/public/About.vue');\nconst News = () => import('../views/public/News.vue');\nconst Products = () => import('../views/public/Products.vue');\nconst Login = () => import('../views/public/Login.vue');\n\n// 员工系统页面\nconst Dashboard = () => import('../views/admin/Dashboard.vue');\nconst MonitoringSystem = () => import('../views/admin/MonitoringSystem.vue');\nconst EmployeeManagement = () => import('../views/admin/EmployeeManagement.vue');\nconst DeviceManagement = () => import('../views/admin/DeviceManagement.vue');\n\n// 路由配置\nconst routes = [\n// 公共路由\n{\n  path: '/',\n  name: 'Home',\n  component: Home,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/about',\n  name: 'About',\n  component: About,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/news',\n  name: 'News',\n  component: News,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/products',\n  name: 'Products',\n  component: Products,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n},\n// 员工系统路由\n{\n  path: '/admin',\n  name: 'Dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/admin/monitoring',\n  name: 'MonitoringSystem',\n  component: MonitoringSystem,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/admin/employees',\n  name: 'EmployeeManagement',\n  component: EmployeeManagement,\n  meta: {\n    requiresAuth: true,\n    requiresAdmin: true\n  }\n}, {\n  path: '/admin/devices',\n  name: 'DeviceManagement',\n  component: DeviceManagement,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 在实际应用中，这里需要从Auth0获取认证状态\n  // 这里简化处理，实际项目中需要根据Auth0的API进行权限验证\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  if (to.meta.requiresAuth && !isAuthenticated.value) {\n    // 需要认证但未登录，重定向到登录页\n    next({\n      name: 'Login'\n    });\n  } else if (to.meta.requiresAdmin && user.value?.role !== 'admin') {\n    // 需要管理员权限但用户不是管理员\n    next({\n      name: 'Dashboard'\n    });\n  } else {\n    // 其他情况正常导航\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useAuth0","Home","About","News","Products","Login","Dashboard","MonitoringSystem","EmployeeManagement","DeviceManagement","routes","path","name","component","meta","requiresAuth","requiresAdmin","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","user","value","role"],"sources":["C:/Users/Scott/Downloads/毕设/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport { useAuth0 } from '@auth0/auth0-vue'\r\n\r\n// 公共页面\r\nconst Home = () => import('../views/public/Home.vue')\r\nconst About = () => import('../views/public/About.vue')\r\nconst News = () => import('../views/public/News.vue')\r\nconst Products = () => import('../views/public/Products.vue')\r\nconst Login = () => import('../views/public/Login.vue')\r\n\r\n// 员工系统页面\r\nconst Dashboard = () => import('../views/admin/Dashboard.vue')\r\nconst MonitoringSystem = () => import('../views/admin/MonitoringSystem.vue')\r\nconst EmployeeManagement = () => import('../views/admin/EmployeeManagement.vue')\r\nconst DeviceManagement = () => import('../views/admin/DeviceManagement.vue')\r\n\r\n// 路由配置\r\nconst routes = [\r\n  // 公共路由\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/about',\r\n    name: 'About',\r\n    component: About,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/news',\r\n    name: 'News',\r\n    component: News,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/products',\r\n    name: 'Products',\r\n    component: Products,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  \r\n  // 员工系统路由\r\n  {\r\n    path: '/admin',\r\n    name: 'Dashboard',\r\n    component: Dashboard,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/admin/monitoring',\r\n    name: 'MonitoringSystem',\r\n    component: MonitoringSystem,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/admin/employees',\r\n    name: 'EmployeeManagement',\r\n    component: EmployeeManagement,\r\n    meta: { requiresAuth: true, requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/admin/devices',\r\n    name: 'DeviceManagement',\r\n    component: DeviceManagement,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// 路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  // 在实际应用中，这里需要从Auth0获取认证状态\r\n  // 这里简化处理，实际项目中需要根据Auth0的API进行权限验证\r\n  const { isAuthenticated, user } = useAuth0()\r\n  \r\n  if (to.meta.requiresAuth && !isAuthenticated.value) {\r\n    // 需要认证但未登录，重定向到登录页\r\n    next({ name: 'Login' })\r\n  } else if (to.meta.requiresAdmin && user.value?.role !== 'admin') {\r\n    // 需要管理员权限但用户不是管理员\r\n    next({ name: 'Dashboard' })\r\n  } else {\r\n    // 其他情况正常导航\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}